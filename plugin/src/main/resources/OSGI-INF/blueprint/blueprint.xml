<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0"
           xsi:schemaLocation="http://www.osgi.org/xmlns/blueprint/v1.0.0
                http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd
                http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0
                http://aries.apache.org/schemas/blueprint-cm/blueprint-cm-1.1.0.xsd">

    <!-- CONFIG -->
    <reference id="secureCredentialsVault" interface="org.opennms.integration.api.v1.scv.SecureCredentialsVault" availability="mandatory"/>
    <!-- Configuration stored in $OPENNMS_HOME/etc/org.opennms.plugins.cloud.cfg file -->
    <cm:property-placeholder id="tsaas-pocPluginProperties" persistent-id="org.opennms.plugins.cloud"
                             update-strategy="reload">
        <cm:default-properties>
            <cm:property name="host" value="localhost"/>
            <cm:property name="port" value="5001"/>
            <cm:property name="tokenKey" value="token"/>
            <cm:property name="tokenValue" value="--not defined--"/><!-- fallback if not imported via cloud-credentials.zip -->
            <cm:property name="mtlsEnabled" value="false"/>
            <cm:property name="batchSize" value="1000"/>
            <cm:property name="maxBatchWaitTimeInMilliSeconds" value="5000" />
        </cm:default-properties>
    </cm:property-placeholder>

    <bean id="tsaasConfig" class="org.opennms.plugins.cloud.tsaas.TsaasConfig" >
        <argument value="${host}"/>
        <argument value="${port}"/>
        <argument value="${tokenKey}"/>
        <argument value="${tokenValue}"/>
        <argument value="${mtlsEnabled}"/>
        <argument value="${batchSize}"/>
        <argument value="${maxBatchWaitTimeInMilliSeconds}"/>
    </bean>

    <bean id="cloudConfigManager" class="org.opennms.plugins.cloud.config.ConfigurationManager" />

    <!-- HEALTH -->
    <bean id="cloudHealthCheck" class="org.opennms.plugins.cloud.tsaas.CloudHealthCheck">
        <argument ref="timeSeriesStorage"/>
    </bean>
    <service ref="cloudHealthCheck" interface="org.opennms.integration.api.v1.health.HealthCheck">
        <service-properties>
            <entry key="registration.export" value="true" />
        </service-properties>
    </service>

    <!-- UI -->
    <service id="cloudUiExtension" interface="org.opennms.integration.api.v1.ui.UIExtension">
        <bean class="org.opennms.plugins.cloud.ui.CloudUiExtension">
            <property name="id" value="cloudUiExtension"/>
            <property name="menuEntry" value="OpenNMS Cloud"/>
            <property name="resourceRoot" value="ui-ext"/>
            <property name="moduleFileName" value="uiextension.es.js"/>
        </bean>
    </service>

    <!-- REST -->
    <bean id="cloudConfigRestService" class="org.opennms.plugins.cloud.rest.CloudConfigRestServiceImpl" >
        <argument ref="cloudConfigManager"/>
    </bean>
    <service interface="org.opennms.plugins.cloud.rest.CloudConfigRestService" ref="cloudConfigRestService" >
        <service-properties>
            <entry key="application-path" value="/rest/plugin" /><!-- TODO: Patrick not sure which base path we should use -->
        </service-properties>
    </service>

    <!-- TSAAS -->
    <bean id="timeSeriesStorage" class="org.opennms.plugins.cloud.tsaas.TsaasStorage" destroy-method="destroy">
        <argument ref="tsaasConfig"/>
        <argument ref="secureCredentialsVault" />
    </bean>
    <service ref="timeSeriesStorage" interface="org.opennms.integration.api.v1.timeseries.TimeSeriesStorage">
        <service-properties>
            <entry key="registration.export" value="true" />
        </service-properties>
    </service>

    <bean id="cloudServiceManager" class="org.opennms.plugins.cloud.ServiceManager" destroy-method="destroy">
        <argument ref="blueprintBundleContext"/>
        <argument ref="timeSeriesStorage"/>
    </bean>
    <service ref="cloudServiceManager" interface="org.opennms.plugins.cloud.ServiceManager" />
</blueprint>
