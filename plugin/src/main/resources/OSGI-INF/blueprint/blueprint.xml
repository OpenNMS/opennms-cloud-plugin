<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0"
           xmlns:ext="http://aries.apache.org/blueprint/xmlns/blueprint-ext/v1.0.0"
           xsi:schemaLocation="http://www.osgi.org/xmlns/blueprint/v1.0.0
                http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd
                http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0
                http://aries.apache.org/schemas/blueprint-cm/blueprint-cm-1.1.0.xsd
                http://aries.apache.org/blueprint/xmlns/blueprint-ext/v1.0.0">

    <ext:property-placeholder placeholder-prefix="$[" placeholder-suffix="]" />

    <!-- Configuration stored in $OPENNMS_HOME/etc/org.opennms.plugins.cloud.cfg file -->
    <cm:property-placeholder id="tsaas-pocPluginProperties" persistent-id="org.opennms.plugins.cloud"
                             update-strategy="reload">
        <cm:default-properties>
            <cm:property name="host" value="localhost"/>
            <cm:property name="port" value="5001"/>
            <cm:property name="tokenKey" value="token"/>
            <cm:property name="tokenValue" value="--not defined--"/><!-- fallback if not imported via cloud-credentials.zip -->
            <cm:property name="mtlsEnabled" value="false"/>
            <cm:property name="batchSize" value="1000"/>
            <cm:property name="maxBatchWaitTimeInMilliSeconds" value="5000" />
        </cm:default-properties>
    </cm:property-placeholder>

    <bean id="tsaasConfig" class="org.opennms.plugins.cloud.config.CloudConfig" >
        <argument value="$[karaf.name]"/>
        <argument value="${host}"/>
        <argument value="${port}"/>
        <argument value="${tokenKey}"/>
        <argument value="${tokenValue}"/>
        <argument value="${mtlsEnabled}"/>
        <argument value="${batchSize}"/>
        <argument value="${maxBatchWaitTimeInMilliSeconds}"/>
    </bean>

    <!--    <reference id="secureCredentialsVault" interface="org.opennms.integration.api.v1.scv.SecureCredentialsVault" availability="mandatory"/>-->
    <!--Secure Credentials Vault (not using reference to avoid load org.opennms.features.api-layer.core for minion-->
    <bean id="secureCredentialsVault" class="org.opennms.features.apilayer.common.scv.SecureCredentialsVaultImpl">
        <argument ref="secureCredentialsVaultInternal" />
    </bean>

    <reference id="secureCredentialsVaultInternal" interface="org.opennms.features.scv.api.SecureCredentialsVault" /><!-- Reference to internal (opennms) SCV-->

    <service ref="secureCredentialsVault" interface="org.opennms.integration.api.v1.scv.SecureCredentialsVault"/>

    <bean id="timeSeriesStorage" class="org.opennms.plugins.cloud.tsaas.TsaasStorage" destroy-method="destroy">
        <argument ref="tsaasConfig"/>
        <argument ref="secureCredentialsVault" />
    </bean>

    <service ref="timeSeriesStorage" interface="org.opennms.integration.api.v1.timeseries.TimeSeriesStorage">
        <service-properties>
            <entry key="registration.export" value="true" />
        </service-properties>
    </service>

    <bean id="cloudHealthCheck" class="org.opennms.plugins.cloud.tsaas.CloudHealthCheck">
        <argument ref="timeSeriesStorage"/>
    </bean>

    <service ref="cloudHealthCheck" interface="org.opennms.integration.api.v1.health.HealthCheck">
        <service-properties>
            <entry key="registration.export" value="true" />
        </service-properties>
    </service>

    <!-- faas -->
    <reference id="listenerManager" interface="org.opennms.netmgt.telemetry.api.TelemetryListenerManager" availability="optional">
        <reference-listener bind-method="onBind" ref="cloudFlowSwitcher"/>
    </reference>

    <reference id="telemetryRegistry" interface="org.opennms.netmgt.telemetry.api.registry.TelemetryRegistry" availability="mandatory"/>

    <bean id="cloudFlowSwitcher" class="org.opennms.plugins.cloud.faas.CloudFlowSwitcher"  destroy-method="destroy">
        <argument ref="tsaasConfig"/>
        <argument ref="cloudTelemetryRegistry"/>
        <argument ref="localDispatcherFactory"/>
    </bean>

    <bean id="cloudTelemetryRegistry" class="org.opennms.plugins.cloud.faas.CloudFlowRegistryImpl">
        <argument ref="telemetryRegistry"/>
        <argument ref="localDispatcherFactory"/>
    </bean>

    <bean id="localDispatcherFactory" class="org.opennms.plugins.cloud.faas.LocalDispatcherFactory">
        <argument ref="offHeapQueueFactory"/>
        <argument ref="flowMessageHandler"/>
    </bean>

    <bean id="flowMessageHandler" class="org.opennms.plugins.cloud.faas.FlowMessageHandler">
    </bean>

    <reference id="offHeapQueueFactory" interface="org.opennms.core.ipc.sink.api.DispatchQueueFactory" />
</blueprint>
