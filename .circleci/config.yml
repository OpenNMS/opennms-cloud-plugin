version: 2.1

executors:
  build-executor:
    docker:
      - image: circleci/openjdk:11-jdk
        environment:
          MAVEN_OPTS: -Xmx1g
  system-test-executor:
    machine:
      image: ubuntu-2004:202010-01

workflows:
  build-deploy:
    jobs:
      - build
      - tests:
          requires:
            - build
      - deploy:
          context:
            - OSSRH Principal
          requires:
            - tests
          filters:
            branches:
              only:
                - main

jobs:
  build:
    executor: build-executor
    steps:
      - checkout
      - run:
          name: Install openssl
          command: |
            sudo apt-get install openssl
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "pom.xml" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run:
          name: Compile source without tests
          command: |
            mvn -DskipITs=true -DskipTests=true clean install
      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "pom.xml" }}
      - persist_to_workspace:
          root: ~/
          paths:
            - .m2
            - project

  tests:
    executor: system-test-executor
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: Run system test with docker-compose
          command: |
            mvn -DskipITs=false -DskipTests=false clean install test integration-test
      - run:
          name: Save test results
          command: |
            mkdir -p ~/junit/
            find . -type f -regex ".*/target/failsafe-reports/.*xml" -exec cp {} ~/junit/ \;
            find . -type f -regex ".*/target/surefire-reports/.*xml" -exec cp {} ~/junit/ \;
          when: always

      - store_test_results:
          path: ~/junit

  deploy:
    executor: build-executor
    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "pom.xml" }}

      - run:
          name: Upload snapshot
          command: |
            mvn -s .circleci/.circleci.settings.xml -DskipTests -Dmaven.verify.skip=true -Dmaven.install.skip=true deploy

